-- MySQL Script generated by MySQL Workbench
-- 07/17/15 17:21:10
-- Model: ac data base    Version: 1.1
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema cigwmsdb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `cigwmsdb` ;
CREATE SCHEMA IF NOT EXISTS `cigwmsdb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `cigwmsdb` ;

-- -----------------------------------------------------
-- Table `cigwmsdb`.`System_Config_Network`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`System_Config_Network` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`System_Config_Network` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `network_name` VARCHAR(45) NOT NULL,
  `domain_id` INT NOT NULL,
  `auto_upgrade` TINYINT(1) NOT NULL DEFAULT 1,
  `up_ok` INT NULL DEFAULT 0 COMMENT 'the number of device upgrade ok',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `network_id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `network_name_UNIQUE` (`network_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_Basic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_Basic` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_Basic` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_name` VARCHAR(45) NOT NULL,
  `dev_sn` VARCHAR(45) NOT NULL,
  `dev_mac` VARCHAR(45) NOT NULL,
  `country_code` VARCHAR(45) NULL DEFAULT 'CHINA',
  `timezone` INT NULL DEFAULT 20,
  `network_id` INT NOT NULL,
  `dev_type_id` INT NOT NULL,
  `auto_upgrade` TINYINT(1) NULL DEFAULT 0,
  `monitored` TINYINT(1) NULL DEFAULT 0,
  `plan_version` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `AP_CFG_index_UNIQUE` (`id` ASC),
  UNIQUE INDEX `dev_sn_UNIQUE` (`dev_sn` ASC),
  UNIQUE INDEX `dev_mac_UNIQUE` (`dev_mac` ASC),
  UNIQUE INDEX `dev_name_UNIQUE` (`dev_name` ASC),
  INDEX `device_network_id_idx` (`network_id` ASC),
  CONSTRAINT `device_network_id`
    FOREIGN KEY (`network_id`)
    REFERENCES `cigwmsdb`.`System_Config_Network` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_SsidTemplate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_SsidTemplate` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_SsidTemplate` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `network_id` INT NOT NULL,
  `ssid_name` VARCHAR(36) NOT NULL,
  `ssid_broadcast` TINYINT(1) NULL DEFAULT 1,
  `ssid_isolate` TINYINT(1) NULL DEFAULT 0,
  `ssid_wds` TINYINT(1) NULL DEFAULT 1,
  `rate_limit_enable` TINYINT(1) NULL DEFAULT 0,
  `us_rate_limit` INT NULL DEFAULT 0,
  `ds_rate_limit` INT NULL DEFAULT 0,
  `station_number` INT NULL DEFAULT 128,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `ssid_template_network_id_idx` (`network_id` ASC),
  CONSTRAINT `ssid_template_network_id`
    FOREIGN KEY (`network_id`)
    REFERENCES `cigwmsdb`.`System_Config_Network` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_Radius`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_Radius` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_Radius` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ssid_template_id` INT NOT NULL,
  `rsp_time` INT NULL,
  `retry_time` INT NULL,
  `main_auth_ip` VARCHAR(48) NULL,
  `main_acct_ip` VARCHAR(48) NULL,
  `main_auth_port` INT NULL,
  `main_acct_port` INT NULL,
  `main_auth_secret` VARCHAR(256) NULL,
  `main_acct_secret` VARCHAR(256) NULL,
  `backup_auth_ip` VARCHAR(48) NULL,
  `backup_acct_ip` VARCHAR(48) NULL,
  `backup_auth_port` INT NULL,
  `backup_acct_port` INT NULL,
  `backup_auth_secret` VARCHAR(256) NULL,
  `backup_acct_secret` VARCHAR(256) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `ssid_template_radius_id`
    FOREIGN KEY (`ssid_template_id`)
    REFERENCES `cigwmsdb`.`Device_Config_SsidTemplate` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_Portal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_Portal` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_Portal` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ssid_template_id` INT NOT NULL,
  `portal_name` VARCHAR(45) NULL,
  `portal_url` VARCHAR(256) NULL,
  `uam_secret` VARCHAR(256) NULL,
  `portal_index` INT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `ssid_template_id_idx` (`ssid_template_id` ASC),
  CONSTRAINT `ssid_template_portal_id`
    FOREIGN KEY (`ssid_template_id`)
    REFERENCES `cigwmsdb`.`Device_Config_SsidTemplate` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_WallGarden`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_WallGarden` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_WallGarden` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ssid_template_id` INT NOT NULL,
  `wallgarden_name` VARCHAR(48) NULL,
  `url` VARCHAR(128) NULL,
  UNIQUE INDEX `wallgarden_id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  INDEX `ssid_template_id_idx` (`ssid_template_id` ASC),
  CONSTRAINT `ssid_template_wallgarden_id`
    FOREIGN KEY (`ssid_template_id`)
    REFERENCES `cigwmsdb`.`Device_Config_SsidTemplate` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_Security`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_Security` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_Security` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ssid_template_id` INT NOT NULL,
  `security_type` VARCHAR(64) NOT NULL DEFAULT 'open' COMMENT 'open/wep/wpa2-psk/wpawpa2-psk/wpawpa2_eap/wpa2_eap/portal',
  `wep_key_len` INT NULL,
  `wep_key_type` INT NULL,
  `wep_key_index` INT NULL,
  `wep_key` VARCHAR(64) NULL DEFAULT '12345',
  `wpa_encry_type` INT NULL,
  `wpa_psk` VARCHAR(256) NULL DEFAULT '12345678',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `ssid_template_security_id`
    FOREIGN KEY (`ssid_template_id`)
    REFERENCES `cigwmsdb`.`Device_Config_SsidTemplate` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Firmware_FileMgmt`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Firmware_FileMgmt` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Firmware_FileMgmt` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `domain_id` INT NOT NULL,
  `fimware_ver` VARCHAR(45) NOT NULL,
  `dev_type_id` INT NULL COMMENT '要支持一个firmware对应多个dev_tyPe，需要考虑如何表示关联关系。',
  `file_name` VARCHAR(45) NOT NULL,
  `file_descript` VARCHAR(128) NULL,
  `upload_time` DATETIME NULL,
  `official_release` TINYINT(1) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Status_Basic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Status_Basic` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Status_Basic` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `boot_ver` VARCHAR(32) NULL,
  `dev_sw_ver_cur` VARCHAR(32) NULL,
  `dev_sw_ver_back` VARCHAR(32) NULL,
  `dev_ip` VARCHAR(16) NULL,
  `dev_fw` VARCHAR(64) NULL COMMENT 'wifi driver version',
  `dev_state` INT NULL COMMENT '1-online/0-offline/2-online device cfg changed' /* comment truncated */ /*need to config /configed
*/,
  `dev_uptime` BIGINT NULL COMMENT 'ap online time',
  `dev_cpu_utilize` INT NULL,
  `dev_free_mem` VARCHAR(32) NULL COMMENT '单位为Bytes',
  `dev_last_seen` DATETIME NULL COMMENT '上次离线时间',
  `wan_speed` INT NULL COMMENT '10/100/1000',
  `wan_duplex` INT NULL COMMENT '0:half' /* comment truncated */ /*1:full*/,
  `wan_port_vid` INT NULL,
  `dev_data_sync` INT NULL DEFAULT 1,
  `sta_num` INT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `device_status_id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `dev_id_UNIQUE` (`dev_id` ASC),
  CONSTRAINT `dev_statusbasic_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Status_Client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Status_Client` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Status_Client` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `radio_id` INT NOT NULL,
  `ssid_index` INT NOT NULL,
  `ssid_name` VARCHAR(36) NULL,
  `sta_mac` VARCHAR(20) NULL,
  `sta_state` INT NULL,
  `connected_time` INT(32) NULL,
  `report_time` DATETIME NULL,
  `channel` INT NULL,
  `rate` INT NULL,
  `idle` INT NULL,
  `caps` VARCHAR(16) NULL,
  `erps` VARCHAR(16) NULL,
  `acaps` VARCHAR(16) NULL,
  `htcaps` VARCHAR(16) NULL,
  `state` VARCHAR(16) NULL,
  `rssi` INT NULL,
  `noise` INT NULL,
  `vlanid` INT NULL,
  `idle_time` INT NULL,
  UNIQUE INDEX `clients_id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  INDEX `dev_id_idx` (`dev_id` ASC),
  CONSTRAINT `dev_statusclient_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Log` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Log` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `dev_log_function` VARCHAR(16) NULL,
  `dev_log_level` INT NULL,
  `dev_log_time` DATETIME NULL,
  `dev_log_msg` VARCHAR(256) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `dev_log_id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Alarm`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Alarm` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Alarm` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `dev_alm_action` VARCHAR(16) NULL COMMENT 'set/clear',
  `dev_alm_function` VARCHAR(16) NULL COMMENT 'online/offline',
  `dev_alm_level` INT NULL,
  `dev_alm_time` DATETIME NOT NULL,
  `dev_alm_msg` VARCHAR(256) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `dev_alarm_id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Dev_Type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Dev_Type` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Dev_Type` (
  `dev_type_id` INT NOT NULL,
  `icon` TINYBLOB NULL,
  PRIMARY KEY (`dev_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_Radio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_Radio` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_Radio` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '1-2.4 2-5.8',
  `dev_id` INT NOT NULL,
  `radio_type` VARCHAR(45) NOT NULL COMMENT '2.4g/5g',
  `radio_description` VARCHAR(45) NULL COMMENT 'ap,station',
  `radio_enable` TINYINT(1) NULL,
  `service_mode` VARCHAR(45) NULL COMMENT 'AP/station/WDSBridge',
  `80211_mode` VARCHAR(45) NULL COMMENT 'a/b/g/n/ac',
  `channel` INT NULL,
  `tx_power` INT NULL,
  `bandwith` INT NULL,
  `minimal_trans_rate` INT NULL,
  `station_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `radio_id_UNIQUE` (`id` ASC),
  INDEX `dev_id_idx` (`dev_id` ASC),
  CONSTRAINT `dev_radio_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Type_Define`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Type_Define` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Type_Define` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_feature_code` VARCHAR(10) NOT NULL COMMENT 'Used for saving Major/Minor/Hwver for product ',
  `dev_model` VARCHAR(32) NOT NULL,
  `dev_vendor` VARCHAR(32) NOT NULL,
  `model_name` VARCHAR(64) NOT NULL,
  `icon` TINYBLOB NULL,
  `cap_2g_chain` INT NULL COMMENT '0 -- Not support 2.4 G' /* comment truncated */ /*2 -- 2X2
3 -- 3x3
*/,
  `cap_2g_ssid_num` INT NULL,
  `cap_2g_service_mode` INT NULL COMMENT 'bit 0 -- support AP mode' /* comment truncated */ /*bit 1 -- support Station mode
bit 2 -- Support WDS Bridge*/,
  `cap_2g_80211_mode` INT NULL COMMENT 'bit 0 -- 802.11a mode' /* comment truncated */ /*bit 1 -- 802.11b mode
bit 2 -- 802.11g mode
bit 3 -- 802.11n mode
bit 4 -- 802.11ac mode*/,
  `cap_2g_band_width` INT NULL COMMENT 'bit 0 -- 20 MHz' /* comment truncated */ /*bit 1 -- 40 MHz
bit 2 -- 80 MHz
bit 3 -- 160 MHz*/,
  `cap_2g_tx_power_min` BIGINT(20) NULL,
  `cap_2g_tx_power_max` BIGINT(20) NULL,
  `cap_5g_chain` INT NULL COMMENT '0 -- Not support 2.4 G' /* comment truncated */ /*2 -- 2X2
3 -- 3x3
*/,
  `cap_5g_ssid_num` INT NULL,
  `cap_5g_service_mode` INT NULL COMMENT 'bit 0 -- support AP mode' /* comment truncated */ /*bit 1 -- support Station mode
bit 2 -- Support WDS Bridge*/,
  `cap_5g_80211_mode` INT NULL COMMENT 'bit 0 -- 802.11a mode' /* comment truncated */ /*bit 1 -- 802.11b mode
bit 2 -- 802.11g mode
bit 3 -- 802.11n mode
bit 4 -- 802.11ac mode*/,
  `cap_5g_band_width` INT NULL COMMENT 'bit 0 -- 20 MHz' /* comment truncated */ /*bit 1 -- 40 MHz
bit 2 -- 80 MHz
bit 3 -- 160 MHz*/,
  `cap_5g_tx_power_min` BIGINT(20) NULL,
  `cap_5g_tx_power_max` BIGINT(20) NULL,
  `eth_port1_type` INT NULL COMMENT 'bit 0 -- support 10m' /* comment truncated */ /*bit 1 -- support 100m
bit 2 -- support 1000m*/,
  `eth_port2_type` INT NULL COMMENT 'bit 0 -- support 10m' /* comment truncated */ /*bit 1 -- support 100m
bit 2 -- support 1000m*/,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `dev_type_id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `dev_model_UNIQUE` (`dev_model` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Status_Radio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Status_Radio` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Status_Radio` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `radio_id` INT NOT NULL,
  `radio_type` VARCHAR(45) NOT NULL,
  `enable` TINYINT(1) NULL,
  `act_tx_power` INT NULL,
  `noise_floor` INT NULL,
  `act_channel` INT NULL,
  `rssi_ch1` INT NULL,
  `rssi_ch2` INT NULL,
  `rssi_ch3` INT NULL,
  `rssi_ch4` INT NULL,
  `report_time` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `radio_status_id_UNIQUE` (`id` ASC),
  INDEX `dev_id_idx` (`dev_id` ASC),
  CONSTRAINT `dev_satusradio_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_Map`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_Map` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_Map` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `dev_longitude` DOUBLE NOT NULL,
  `dev_latitude` DOUBLE NOT NULL,
  `dev_zoomlevel` TINYINT NOT NULL DEFAULT 16 COMMENT '0-18',
  `dev_map` MEDIUMBLOB NULL,
  `floor_id` INT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `map_id_UNIQUE` (`id` ASC),
  INDEX `dev_id_idx` (`dev_id` ASC),
  UNIQUE INDEX `dev_id_UNIQUE` (`dev_id` ASC),
  CONSTRAINT `dev_map_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`System_Alarm`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`System_Alarm` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`System_Alarm` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `sys_alm_action` VARCHAR(16) NULL,
  `sys_alm_function` VARCHAR(16) NULL,
  `sys_alm_level` INT NULL,
  `sys_alm_report_time` DATETIME NOT NULL,
  `sys_alm_msg` VARCHAR(256) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`System_Log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`System_Log` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`System_Log` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `sys_log_function` INT NULL,
  `sys_log_level` INT NULL,
  `sys_log_time` TIME NULL,
  `sys_log_msg` VARCHAR(256) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_Wanport`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_Wanport` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_Wanport` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `wanport_mode` INT NULL COMMENT 'static/dhcp',
  `wanport_vlan` INT NULL,
  `wanport_ip` VARCHAR(45) NULL,
  `wanport_netmask` VARCHAR(45) NULL,
  `wanport_gateway` VARCHAR(45) NULL,
  `wanport_dns1` VARCHAR(45) NULL,
  `wanport_dns2` VARCHAR(45) NULL,
  `wanport_feature` INT NULL COMMENT 'bit 0 -- http' /* comment truncated */ /*bit 1 -- https
bit 2 -- ssh
bit 3 -- telnet*/,
  `wanport_detag` TINYINT(1) NULL DEFAULT 1,
  `flag` TINYINT(1) NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `wanport_id_UNIQUE` (`id` ASC),
  INDEX `dev_id_idx` (`dev_id` ASC),
  CONSTRAINT `dev_wanport_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_GroupId`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_GroupId` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_GroupId` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ssid_template_id` INT NOT NULL,
  `filter_id` VARCHAR(32) NOT NULL,
  `vlan_id` INT NULL,
  `egress_method` VARCHAR(8) NULL,
  `egress_rate` INT NULL,
  UNIQUE INDEX `group_id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  INDEX `ssid_template_id_idx` (`ssid_template_id` ASC),
  CONSTRAINT `ssid_template_group_id`
    FOREIGN KEY (`ssid_template_id`)
    REFERENCES `cigwmsdb`.`Device_Config_SsidTemplate` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_Management`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_Management` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_Management` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `mgmt_user` VARCHAR(45) NULL COMMENT 'static/dhcp',
  `mgmt_password` VARCHAR(45) NULL,
  `mgmt_force_upgrade` TINYINT(1) NULL,
  `mgmt_ssh` TINYINT(1) NULL DEFAULT 1,
  `mgmt_http` TINYINT(1) NULL,
  `mgmt_https` TINYINT(1) NULL,
  `mgmt_telnet` TINYINT(1) NULL,
  `mgmt_syslog` TINYINT(1) NULL,
  `mgmt_syslog_server` VARCHAR(45) NULL COMMENT 'syslog server ip address',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `management_id_UNIQUE` (`id` ASC),
  INDEX `dev_id_idx` (`dev_id` ASC),
  CONSTRAINT `dev_mgmt_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`System_Config_Domain`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`System_Config_Domain` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`System_Config_Domain` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `domain_name` VARCHAR(64) NULL,
  `domain_mail` VARCHAR(128) NULL,
  `timezone` INT NULL DEFAULT 20,
  `country_code` VARCHAR(45) NULL DEFAULT 'CHINA',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`System_Config_UpgradeMethod`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`System_Config_UpgradeMethod` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`System_Config_UpgradeMethod` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `domain_id` INT NOT NULL,
  `upgrade_mode` VARCHAR(45) NULL COMMENT 'tftp/ftp/http/https',
  `upgrade_server` VARCHAR(45) NULL,
  `upgrade_user` VARCHAR(45) NULL,
  `upgrade_password` VARCHAR(45) NULL,
  `remote` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `methoed_id_UNIQUE` (`id` ASC),
  CONSTRAINT `system_upmethod_id`
    FOREIGN KEY (`id`)
    REFERENCES `cigwmsdb`.`System_Config_Domain` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`System_Config_User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`System_Config_User` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`System_Config_User` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NOT NULL COMMENT 'tftp/ftp/http/https',
  `domain_id` INT NOT NULL,
  `user_password` VARCHAR(32) NULL,
  `user_group_id` INT NULL,
  `user_description` VARCHAR(128) NULL,
  `email` VARCHAR(128) NULL,
  `telephone` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `user_id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`System_Config_Group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`System_Config_Group` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`System_Config_Group` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_group_type` VARCHAR(45) NOT NULL COMMENT 'root/administrator/operater/monitor',
  `management_user` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'root用户运行创建,修改,删除群组',
  `management_networks` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'root/administrator运行创建,修改，删除用户',
  `management_system` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'root/administrator允许创建,修改,删除Network',
  `configure` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'root/administrator/operator允许配置变更',
  `monitor` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'root/administrator/operator/monitor允许配置查询',
  `diagnose` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `user_group_id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`System_Config_PageMapping`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`System_Config_PageMapping` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`System_Config_PageMapping` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `uri` VARCHAR(128) NOT NULL,
  `administrator` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'group/user/network/config/monitor',
  `operator` TINYINT(1) NOT NULL DEFAULT 0,
  `monitor` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `pagemapping_id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `uri_UNIQUE` (`uri` ASC))
ENGINE = InnoDB
COMMENT = '用来给管理人员定制页面功能，指定哪些功能映射到用户权限模块';


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Operate_Action_FromCgi`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Operate_Action_FromCgi` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Operate_Action_FromCgi` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `op_type` VARCHAR(45) NOT NULL COMMENT 'operation table name',
  `op_act` VARCHAR(45) NULL COMMENT 'update/insert/delete',
  `op_param` INT NOT NULL COMMENT 'operation table id',
  `op_param1` INT NULL,
  `dev_id` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Operate_Action_FromeDevice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Operate_Action_FromeDevice` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Operate_Action_FromeDevice` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NULL,
  `op_type` VARCHAR(45) NULL COMMENT 'ssid_template/radio_param/dev_cfg/firmware_upgd',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Pm_Radio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Pm_Radio` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Pm_Radio` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NULL,
  `radio_id` INT NULL,
  `rx_packets` BIGINT NULL,
  `rx_bytes` BIGINT NULL,
  `rx_err_pkts` BIGINT NULL,
  `tx_packets` BIGINT NULL,
  `tx_bytes` BIGINT NULL,
  `tx_retry_pkts` BIGINT NULL,
  `delta_time` INT NULL COMMENT 'second value',
  `rx_bytes_rate` BIGINT NULL,
  `rx_packets_rate` BIGINT NULL,
  `tx_bytes_rate` BIGINT NULL,
  `tx_packets_rate` BIGINT NULL,
  `report_time` DATETIME NULL,
  `tx_drop_pkts` BIGINT NULL,
  `rx_drop_pkts` BIGINT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `radio_id_UNIQUE` (`id` ASC),
  INDEX `dev_id_idx` (`dev_id` ASC),
  CONSTRAINT `dev_pmradio_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Pm_Client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Pm_Client` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Pm_Client` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `radio_id` INT NOT NULL,
  `ssid_index` INT NOT NULL,
  `client_id` INT NOT NULL,
  `sta_upstream_packets` BIGINT(20) NULL,
  `sta_upstream_bytes` BIGINT(20) NULL,
  `sta_downstream_packets` BIGINT(20) NULL,
  `sta_downstream_bytes` BIGINT(20) NULL,
  `report_time` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `client_pm_id_UNIQUE` (`id` ASC),
  INDEX `dev_id_idx` (`dev_id` ASC),
  CONSTRAINT `dev_pmclient_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Config_RadioToSsidMapping`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Config_RadioToSsidMapping` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Config_RadioToSsidMapping` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `radio_id` INT NOT NULL,
  `network_id` INT NOT NULL,
  `ssid_index` INT NOT NULL,
  `ssid_template_id` INT NULL,
  `ssid_vlan_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `radiotossidmapping_id_UNIQUE` (`id` ASC),
  INDEX `dev_id_idx` (`dev_id` ASC),
  CONSTRAINT `dev_radiotossidmapping_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Status_Ssid`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Status_Ssid` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Status_Ssid` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `radio_id` INT NOT NULL,
  `ssid_index` INT NOT NULL,
  `enable` TINYINT(1) NULL,
  `cur_user` INT NULL,
  `report_time` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `ssid_status_id_UNIQUE` (`id` ASC),
  INDEX `dev_id_idx` (`dev_id` ASC),
  CONSTRAINT `dev_statusssid_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Pm_Ssid`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Pm_Ssid` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Pm_Ssid` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_id` INT NOT NULL,
  `radio_id` INT NOT NULL,
  `ssid_index` INT NOT NULL,
  `rx_packets` BIGINT NULL,
  `rx_bytes` BIGINT NULL,
  `tx_packets` BIGINT NULL,
  `tx_bytes` BIGINT NULL,
  `report_time` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `radio_id_UNIQUE` (`id` ASC),
  INDEX `dev_id_idx` (`dev_id` ASC),
  CONSTRAINT `dev_pmssid_id`
    FOREIGN KEY (`dev_id`)
    REFERENCES `cigwmsdb`.`Device_Config_Basic` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`Device_Country_Channel_Define`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`Device_Country_Channel_Define` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`Device_Country_Channel_Define` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `radio_type` VARCHAR(10) NOT NULL COMMENT '2.4g/5g',
  `country_code` VARCHAR(32) NOT NULL,
  `support_channel_num` INT NOT NULL,
  `channel_list` VARCHAR(256) NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`System_Config_DeviceUpgrade`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`System_Config_DeviceUpgrade` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`System_Config_DeviceUpgrade` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dev_type_id` INT NULL,
  `network_id` INT NULL,
  `plan_version` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `system_devup_id_idx` (`network_id` ASC),
  CONSTRAINT `system_devup_id`
    FOREIGN KEY (`network_id`)
    REFERENCES `cigwmsdb`.`System_Config_Network` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cigwmsdb`.`System_Network_Map`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cigwmsdb`.`System_Network_Map` ;

CREATE TABLE IF NOT EXISTS `cigwmsdb`.`System_Network_Map` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `network_id` INT NOT NULL,
  `map_type` INT NULL COMMENT 'google/ baidu/ user',
  `address` VARCHAR(64) NULL,
  `longitude` DOUBLE NOT NULL,
  `latitude` DOUBLE NOT NULL,
  `zoomlevel` TINYINT NOT NULL COMMENT '0-18',
  `storey_height` INT NOT NULL DEFAULT 1,
  `floor_id` INT NULL,
  `map_image` MEDIUMBLOB NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `network_id_UNIQUE` (`id` ASC),
  CONSTRAINT `system_network_id`
    FOREIGN KEY (`network_id`)
    REFERENCES `cigwmsdb`.`System_Config_Network` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
USE `cigwmsdb`;

DELIMITER $$

USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_Basic_AUPD` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_Basic_AUPD` AFTER UPDATE ON `Device_Config_Basic` FOR EACH ROW
begin
declare data_sync int default 0;
if old.timezone != new.timezone || old.country_code != new.country_code then
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=new.id;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=new.id;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_Basic",new.id,new.id, "update");
end if;
if old.monitored != new.monitored then
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_Basic",new.id,new.id, "m_update");
end if;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_SsidTemplate_AFTER_UPDATE` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_SsidTemplate_AFTER_UPDATE` AFTER UPDATE ON `Device_Config_SsidTemplate` FOR EACH ROW
begin
declare num int;
declare value int;
declare i int default 0;
declare j int default 0;
declare data_sync int default 0;
select count(*) into num from Device_Config_RadioToSsidMapping where ssid_template_id=new.id;
while i<num do
if i = 0 then
set j:=i+1;
else
set j:=i;
end if;
select dev_id into value from Device_Config_RadioToSsidMapping where ssid_template_id=new.id limit i,j;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=value;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=value;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_SsidTemplate",new.id,value,"update");
set i:=i+1;
end while;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_Radius_AFTER_UPDATE` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_Radius_AFTER_UPDATE` AFTER UPDATE ON `Device_Config_Radius`FOR EACH ROW
begin
declare num int;
declare value int;
declare i int default 0;
declare j int default 0;
declare data_sync int default 0;
select count(*) into num from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id;
while i<num do
if i = 0 then
set j:=i+1;
else
set j:=i;
end if;
select dev_id into value from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id limit i,j;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=value;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=value;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_Radius",new.ssid_template_id,value,"update");
set i:=i+1;
end while;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_Portal_AFTER_UPDATE` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_Portal_AFTER_UPDATE` AFTER UPDATE ON `Device_Config_Portal` FOR EACH ROW
begin
declare num int;
declare value int;
declare i int default 0;
declare j int default 0;
declare data_sync int default 0;
select count(*) into num from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id;
while i<num do
if i = 0 then
set j:=i+1;
else
set j:=i;
end if;
select dev_id into value from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id limit i,j;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=value;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=value;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_Portal",new.ssid_template_id,value,"update");
set i:=i+1;
end while;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_WallGarden_AUPD` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_WallGarden_AUPD` AFTER UPDATE ON `Device_Config_WallGarden` FOR EACH ROW
begin
declare num int;
declare value int;
declare i int default 0;
declare j int default 0;
declare data_sync int default 0;
select count(*) into num from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id;
while i<num do
if i = 0 then
set j:=i+1;
else
set j:=i;
end if;
select dev_id into value from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id limit i,j;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=value;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=value;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_WallGarden",new.ssid_template_id,value,"update");
set i:=i+1;
end while;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_WallGarden_AINS` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_WallGarden_AINS` AFTER INSERT ON `Device_Config_WallGarden` FOR EACH ROW
begin
declare num int;
declare value int;
declare i int default 0;
declare j int default 0;
declare data_sync int default 0;
select count(*) into num from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id;
while i<num do
if i = 0 then
set j:=i+1;
else
set j:=i;
end if;
select dev_id into value from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id limit i,j;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=value;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=value;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_WallGarden",new.ssid_template_id,value,"insert");
set i:=i+1;
end while;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_Security_AFTER_UPDATE` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_Security_AFTER_UPDATE` AFTER UPDATE ON `Device_Config_Security` FOR EACH ROW
begin
declare num int;
declare value int;
declare mapp_id int;
declare i int default 0;
declare j int default 0;
declare data_sync int default 0;
select count(*) into num from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id;
while i<num do
if i = 0 then
set j:=i+1;
else
set j:=i;
end if;
select dev_id,network_id into value,mapp_id from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id limit i,j;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=value;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=value;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_Security",new.ssid_template_id,value,"update");
set i:=i+1;
end while;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_Radio_AUPD` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_Radio_AUPD` AFTER UPDATE ON `Device_Config_Radio` FOR EACH ROW
begin
declare data_sync int default 0;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=new.dev_id;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=new.dev_id;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_Radio",new.id,new.dev_id,"update");
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_Wanport_AUPD` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_Wanport_AUPD` AFTER UPDATE ON `Device_Config_Wanport` FOR EACH ROW
begin
declare data_sync int default 0;
if new.flag then
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=new.dev_id;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=new.dev_id;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_Wanport",new.id,new.dev_id,"update");
end if;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_Wanport_AINS` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_Wanport_AINS` AFTER INSERT ON `Device_Config_Wanport` FOR EACH ROW
begin
declare data_sync int default 0;
if new.flag then
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=new.dev_id;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=new.dev_id;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_Wanport",new.id,new.dev_id,"insert");
end if;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_GroupId_AUPD` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_GroupId_AUPD` AFTER UPDATE ON `Device_Config_GroupId` FOR EACH ROW
begin
declare num int;
declare value int;
declare i int default 0;
declare j int default 0;
declare data_sync int default 0;
select count(*) into num from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id;
while i<num do
if i = 0 then
set j:=i+1;
else
set j:=i;
end if;
select dev_id into value from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id limit i,j;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=value;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=value;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_GroupId",new.ssid_template_id,value,"update");
set i:=i+1;
end while;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_GroupId_AINS` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_GroupId_AINS` AFTER INSERT ON `Device_Config_GroupId` FOR EACH ROW
begin
declare num int;
declare value int;
declare i int default 0;
declare j int default 0;
declare data_sync int default 0;
select count(*) into num from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id;
while i<num do
if i = 0 then
set j:=i+1;
else
set j:=i;
end if;
select dev_id into value from Device_Config_RadioToSsidMapping where ssid_template_id=new.ssid_template_id limit i,j;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=value;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=value;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_GroupId",new.ssid_template_id,value,"insert");
set i:=i+1;
end while;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_Management_AUPD` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_Management_AUPD` AFTER UPDATE ON `Device_Config_Management` FOR EACH ROW
begin
declare data_sync int default 0;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=new.dev_id;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=new.dev_id;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_Management",new.id,new.dev_id,"update");
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_Management_AINS` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_Management_AINS` AFTER INSERT ON `Device_Config_Management` FOR EACH ROW
begin
declare data_sync int default 0;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=new.dev_id;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=new.dev_id;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_Management",new.id,new.dev_id,"insert");
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_RadioToSsidMapping_AFTER_INSERT` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_RadioToSsidMapping_AFTER_INSERT` AFTER INSERT ON `Device_Config_RadioToSsidMapping`FOR EACH ROW
begin
declare data_sync int default 0;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=new.dev_id;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=new.dev_id;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_RadioToSsidMapping",new.id,new.dev_id, "insert");
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_RadioToSsidMapping_AUPD` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_RadioToSsidMapping_AUPD` AFTER UPDATE ON `Device_Config_RadioToSsidMapping` FOR EACH ROW
begin
declare data_sync int default 0;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=new.dev_id;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=new.dev_id;
insert into Operate_Action_FromCgi(op_type,op_param,dev_id,op_act) values("Device_Config_RadioToSsidMapping",new.id,new.dev_id, "update");
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`Device_Config_RadioToSsidMapping_ADEL` $$
USE `cigwmsdb`$$
CREATE TRIGGER `Device_Config_RadioToSsidMapping_ADEL` AFTER DELETE ON `Device_Config_RadioToSsidMapping` FOR EACH ROW
begin
declare data_sync int default 0;
select dev_data_sync into data_sync from Device_Status_Basic where dev_id=old.dev_id;
set data_sync:=data_sync+1;
update Device_Status_Basic set dev_data_sync=data_sync where dev_id=old.dev_id;
insert into Operate_Action_FromCgi(op_type,op_param,op_param1,dev_id,op_act) values("Device_Config_RadioToSsidMapping",old.radio_id,old.ssid_index,old.dev_id, "delete");
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`System_Config_DeviceUpgrade_AUPD` $$
USE `cigwmsdb`$$
CREATE TRIGGER `System_Config_DeviceUpgrade_AUPD` AFTER UPDATE ON `System_Config_DeviceUpgrade` FOR EACH ROW
begin
if old.plan_version != new.plan_version then
update System_Config_Network set up_ok=0 where id=new.network_id;
end if;
end$$


USE `cigwmsdb`$$
DROP TRIGGER IF EXISTS `cigwmsdb`.`System_Config_DeviceUpgrade_AINS` $$
USE `cigwmsdb`$$
CREATE TRIGGER `System_Config_DeviceUpgrade_AINS` AFTER INSERT ON `System_Config_DeviceUpgrade` FOR EACH ROW
begin
update System_Config_Network set up_ok=0 where id=new.network_id;
end$$


DELIMITER ;
